{"version":3,"sources":["components/StartPage/StartPageMain/StartPageMain.module.scss","components/StartPage/StartPageMenu/StartPageMenu.js","components/StartPage/StartPageMain/StartPageMain.js","components/StartPage/StartPageSlider/StartPageSlider.js","components/StartPage/OpenedMenu/OpenedMenu.js","components/StartPage/StartPage.js","components/OrderPage/OrderPageHeader/OrderPageHeader.js","components/OrderPage/OrderPageNav/OrderPageNav.js","api/apiKey.js","api/api.js","redux/actionTypes.js","redux/map.js","redux/selectors.js","components/OrderPage/OrderPageMap/Marker/Marker.js","components/OrderPage/OrderPageMap/OrderPageMap.js","components/OrderPage/MapForm/MapForm.js","components/OrderPage/OrderPage.js","App.js","redux/store.js","index.js","components/OrderPage/OrderPage.module.scss","components/StartPage/StartPageSlider/StartPageSlider.module.scss","components/StartPage/OpenedMenu/OpenedMenu.module.scss","components/StartPage/StartPageMenu/StartPageMenu.module.scss","components/OrderPage/OrderPageHeader/OrderPageHeader.module.scss","components/OrderPage/OrderPageMap/Marker/Marker.module.scss","components/StartPage/StartPage.module.scss","components/OrderPage/OrderPageNav/OrderPageNav.module.scss","components/OrderPage/MapForm/MapForm.module.scss"],"names":["module","exports","StartPageMenu","menuIsOpen","setMenuIsOpen","langButtonClasses","cn","styles","langButton","showMobile","useState","lngIsRussian","setLngIsRussian","className","menu","menuButton","onClick","beforeInjection","svg","classList","add","closeButton","src","process","e","preventDefault","toggleLng","StartPageMain","history","useHistory","main","header","miniName","cities","city","articles","firstArticle","sloganContainer","slogan","rentButton","push","footer","copyright","href","phone","StartPageSlider","renderBottomCenterControls","slideCount","currentSlide","goToSlide","Array","map","key","undefined","type","aria-label","width","height","cx","cy","r","renderCenterLeftControls","previousSlide","sliderButton","alt","renderCenterRightControls","nextSlide","speed","wrapAround","defaultControlsConfig","containerClassName","buttonContainer","pagingDotsContainerClassName","paginationContainer","pagingDotsStyle","fill","opacity","pagingDotsClassName","dot","imgLink","article","text","buttonColor","slider","index","sliderItem","wrapImg","sliderImg","sliderContent","OpenedMenu","openedMenu","menuContainer","centerContent","social","icon","StartPage","OrderPageHeader","OrderPageNav","nav","to","apiKey","template","axios","baseURL","headers","api","getPointsFromApi","a","get","response","data","filter","marker","cityId","getMarkerForMap","point","Geocode","fromAddress","name","address","locationCoors","results","geometry","location","lat","lng","cityCoors","id","FETCH_POINTS_SUCCESS","FETCH_MARKERS","initialState","points","markers","state","payload","getPointsAddress","createSelector","getMarkersFromState","getMarkersWithMemo","getCitiesWithMemo","uniqBy","Marker","color","setCurrentCity","setCurrentAddress","setZoom","setCenter","pin","bounce","style","backgroundColor","cursor","title","pulse","connect","fetchMarkers","dispatch","Promise","all","center","zoom","useEffect","length","bootstrapURLKeys","options","scrollwheel","MapForm","citiesFromState","filteredMarkers","currentCity","currentAddress","filterOptionsForCity","createFilterOptions","matchFrom","stringify","option","filterOptionsForAddress","startAfter","mapForm","Autocomplete","forcePopupIcon","getOptionLabel","getOptionSelected","value","filterOptions","renderInput","params","TextField","label","placeholder","InputLabelProps","shrink","noOptionsText","onChange","event","reason","fetchPoints","error","setApiKey","setLanguage","setRegion","orderMain","orderMainContainer","orderWrap","rightContainer","leftContainer","yourOrderContainer","yourOrder","orderPoint","pointTitle","dots","chooseModelButton","disabled","App","path","component","exact","OrderPage","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5761ad1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"StartPageMain_main__3h4ss\",\"header\":\"StartPageMain_header__26JgR\",\"miniName\":\"StartPageMain_miniName__2kkNp\",\"cities\":\"StartPageMain_cities__1JRQ0\",\"city\":\"StartPageMain_city__3UhWF\",\"articles\":\"StartPageMain_articles__1L2Jx\",\"firstArticle\":\"StartPageMain_firstArticle__2fG4N\",\"sloganContainer\":\"StartPageMain_sloganContainer__3CcqG\",\"slogan\":\"StartPageMain_slogan__3Iap1\",\"rentButton\":\"StartPageMain_rentButton__2Kmw_\",\"footer\":\"StartPageMain_footer__1hbRL\",\"copyright\":\"StartPageMain_copyright__iI1tE\",\"phone\":\"StartPageMain_phone__2kq6Q\"};","import styles from \"./StartPageMenu.module.scss\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport cn from \"classnames\";\r\nimport { useState } from \"react\";\r\n\r\nconst StartPageMenu = ({ menuIsOpen, setMenuIsOpen }) => {\r\n  const langButtonClasses = cn ([styles.langButton], {\r\n    [styles.showMobile]: menuIsOpen,\r\n  })\r\n\r\n  const [lngIsRussian, setLngIsRussian] = useState(true);\r\n\r\n  const toggleLng = (e) => {\r\n    e.preventDefault();\r\n    setLngIsRussian(!lngIsRussian);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.menu}>\r\n      <button\r\n        className={styles.menuButton}\r\n        onClick={() => setMenuIsOpen(!menuIsOpen)}\r\n      >\r\n        {menuIsOpen ? (\r\n          <ReactSVG\r\n            beforeInjection={(svg) => {\r\n              svg.classList.add(styles.closeButton);\r\n            }}\r\n            src={process.env.PUBLIC_URL + '/images/x.svg'}\r\n          />\r\n        ) : (\r\n          <ReactSVG src={process.env.PUBLIC_URL + '/images/menu_btn.svg'} />\r\n        )}\r\n      </button>\r\n      <button className={langButtonClasses} onClick={(e) => toggleLng(e)}>{lngIsRussian ? 'Eng' : 'Рус'}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPageMenu;\r\n","import styles from \"./StartPageMain.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ReactSVG } from \"react-svg\";\r\n\r\nconst StartPageMain = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const goToOrder = () => {\r\n    history.push('/order');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.header}>\r\n        <span className={styles.miniName}>Need for drive</span>\r\n        <div className={styles.cities}>\r\n          <ReactSVG src={process.env.PUBLIC_URL + '/images/marker.svg'}/>\r\n          <span className={styles.city}>Ульяновск</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.articles}>\r\n        <h1 className={styles.firstArticle}>Каршеринг <span>Need for drive</span></h1>\r\n      </div>\r\n      <div className={styles.sloganContainer}>\r\n        <span className={styles.slogan}>\r\n        Поминутная аренда авто твоего города\r\n        </span>\r\n      </div>\r\n      <button className={styles.rentButton} onClick={() => goToOrder()}>\r\n        Забронировать\r\n      </button>\r\n      <div className={styles.footer}>\r\n        <span className={styles.copyright}>© 2016-2019 «Need for drive»</span>\r\n        <a href=\"tel:+74952342244\" className={styles.phone}>8 (495) 234-22-44</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPageMain;\r\n","import Carousel from \"nuka-carousel\";\r\nimport styles from \"./StartPageSlider.module.scss\";\r\n\r\nconst StartPageSlider = () => {\r\n\r\n  const sliders = [\r\n    {\r\n      imgLink: \"/images/slider1.png\",\r\n      article: \"Бесплатная парковка\",\r\n      text:\r\n        \"Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.\",\r\n      buttonColor: \"green\",\r\n    },\r\n    {\r\n      imgLink: \"/images/slider2.png\",\r\n      article: \"Страховка\",\r\n      text: \"Полная страховка автомобиля\",\r\n      buttonColor: \"blue\",\r\n    },\r\n    {\r\n      imgLink: \"/images/slider3.png\",\r\n      article: \"Бензин\",\r\n      text: \"Полный бак на любой заправке города за наш счёт\",\r\n      buttonColor: \"red\",\r\n    },\r\n    {\r\n      imgLink: \"/images/slider4.png\",\r\n      article: \"Обслуживание\",\r\n      text: \"Автомобиль проходит еженедельное ТО\",\r\n      buttonColor: \"purple\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Carousel\r\n      renderBottomCenterControls={({ slideCount, currentSlide, goToSlide }) => (\r\n        <div className=\"slider-control-bottomcenter\">\r\n          <ul>\r\n            {[...Array(slideCount)].map((e, key) => (\r\n              <li\r\n                className={currentSlide === key ? \"active\" : undefined}\r\n                key={key}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  aria-label=\"slide 1 bullet\"\r\n                  onClick={() => goToSlide(key)}\r\n                >\r\n                  <svg width=\"12\" height=\"12\">\r\n                    <circle cx=\"4\" cy=\"4\" r=\"4\" />\r\n                  </svg>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      renderCenterLeftControls={({ previousSlide }) => (\r\n        <button onClick={previousSlide} className={styles.sliderButton}>\r\n          <img alt=\"left\" src={process.env.PUBLIC_URL + '/images/left.svg'} />\r\n        </button>\r\n      )}\r\n      renderCenterRightControls={({ nextSlide }) => (\r\n        <button onClick={nextSlide} className={styles.sliderButton}>\r\n          <img alt=\"right\" src={process.env.PUBLIC_URL + '/images/right.svg'} />\r\n        </button>\r\n      )}\r\n      width=\"688px\"\r\n      speed={100}\r\n      wrapAround={true}\r\n      defaultControlsConfig={{\r\n        containerClassName: styles.buttonContainer,\r\n        pagingDotsContainerClassName: styles.paginationContainer,\r\n        pagingDotsStyle: {\r\n          fill: \"white\",\r\n          opacity: \"1\",\r\n        },\r\n        pagingDotsClassName: styles.dot,\r\n      }}\r\n    >\r\n      {sliders.map((slider, index) => {\r\n        return (\r\n          <div className={styles.sliderItem} key={index}>\r\n            <div className={styles.wrapImg}>\r\n              <img\r\n                className={styles.sliderImg}\r\n                alt=\"slider\"\r\n                src={process.env.PUBLIC_URL + slider.imgLink}\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.sliderContent}>\r\n              <h3>{slider.article}</h3>\r\n              <p>{slider.text}</p>\r\n              <button\r\n                className={styles[slider.buttonColor]}\r\n              >\r\n                Подробнее\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default StartPageSlider;\r\n","import styles from \"./OpenedMenu.module.scss\";\r\nimport { ReactSVG } from \"react-svg\";\r\n\r\nconst OpenedMenu = () => {\r\n  return (\r\n    <div className={styles.openedMenu}>\r\n      <div className={styles.menuContainer}>\r\n        <div className={styles.centerContent}>\r\n          <ul className={styles.menu}>\r\n            <li><a href=\"/#\">ПАРКОВКА</a></li>\r\n            <li><a href=\"/#\">СТРАХОВКА</a></li>\r\n            <li><a href=\"/#\">БЕНЗИН</a></li>\r\n            <li><a href=\"/#\">ОБСЛУЖИВАНИЕ</a></li>\r\n          </ul>\r\n          <ul className={styles.social}>\r\n            <li>\r\n              <a href=\"/#\">\r\n              <ReactSVG\r\n                beforeInjection={(svg) => {\r\n                  svg.classList.add(styles.icon);\r\n                }}\r\n                src={process.env.PUBLIC_URL + '/images/telegram.svg'}\r\n              />\r\n            </a>\r\n            </li>\r\n            <li>\r\n            <a href=\"/#\">\r\n              <ReactSVG\r\n                  beforeInjection={(svg) => {\r\n                    svg.classList.add(styles.icon);\r\n                  }}\r\n                  src={process.env.PUBLIC_URL + '/images/facebook.svg'}\r\n                />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/#\">\r\n                <ReactSVG\r\n                  beforeInjection={(svg) => {\r\n                    svg.classList.add(styles.icon);\r\n                  }}\r\n                  src={process.env.PUBLIC_URL + '/images/instagram.svg'}\r\n                />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenedMenu;\r\n","import StartPageMenu from './StartPageMenu/StartPageMenu';\r\nimport styles from './StartPage.module.scss'\r\nimport StartPageMain from './StartPageMain/StartPageMain';\r\nimport StartPageSlider from './StartPageSlider/StartPageSlider';\r\nimport { useState } from 'react';\r\nimport OpenedMenu from './OpenedMenu/OpenedMenu';\r\n\r\nconst StartPage = () => {\r\n\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      {menuIsOpen && <OpenedMenu />}\r\n      <StartPageMenu menuIsOpen={menuIsOpen} setMenuIsOpen={setMenuIsOpen} />\r\n      <StartPageMain />\r\n      <StartPageSlider />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StartPage;","import { ReactSVG } from 'react-svg';\r\nimport styles from './OrderPageHeader.module.scss'\r\n\r\nconst OrderPageHeader = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n        <span className={styles.miniName}>Need for drive</span>\r\n        <div className={styles.cities}>\r\n          <ReactSVG src={process.env.PUBLIC_URL + '/images/marker.svg'}/>\r\n          <span className={styles.city}>Ульяновск</span>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default OrderPageHeader;","import styles from './OrderPageNav.module.scss';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst OrderPageNav = () => {\r\n  return (\r\n    <ul className={styles.nav}>\r\n      <li><Link to={'#'}>Местоположение</Link></li>\r\n      <li><Link to={'#'}>Модель</Link></li>\r\n      <li><Link to={'#'}>Дополнительно</Link></li>\r\n      <li><Link to={'#'}>Итого</Link></li>\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default OrderPageNav","const apiKey = \"AIzaSyBIgRnDwWUbKEa3VHPX8tzNJW0AoFwOSfI\";\r\n\r\nexport default apiKey;","import * as axios from 'axios';\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst template = axios.create({\r\n  baseURL: 'https://api-factory.simbirsoft1.com/api/',\r\n  headers: {\r\n    'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n    'Access-Control-Allow-Credentials': 'true',\r\n    'Access-Control-Allow-Origin': '*'\r\n  }\r\n})\r\n\r\nconst getPointsFromApi = async () => {\r\n  const response = await template.get(`db/point`);\r\n  return response.data.data.filter((marker) => marker.cityId);\r\n}\r\n\r\n\r\nconst getMarkerForMap = async (point) => {\r\n  const locationCoors = await Geocode.fromAddress(`${point.cityId.name} ${point.address}`);\r\n  const { lat, lng } = locationCoors.results[0].geometry.location;\r\n  const cityCoors = await Geocode.fromAddress(point.cityId.name);\r\n  return { lat, lng, city: {\r\n    name: point.cityId.name,\r\n    lat: cityCoors.results[0].geometry.location.lat,\r\n    lng: cityCoors.results[0].geometry.location.lng,\r\n    id: point.cityId.id\r\n  }, address: point.address, id: point.id };\r\n}\r\n\r\n\r\nconst api = {\r\n  getPointsFromApi,\r\n  getMarkerForMap,\r\n}\r\n\r\nexport default api;","export const FETCH_POINTS_START = 'FETCH_POINTS_START';\r\nexport const FETCH_POINTS_SUCCESS = 'FETCH_POINTS_SUCCESS';\r\nexport const FETCH_POINTS_FAILURE = 'FETCH_POINTS_FAILURE';\r\n\r\nexport const FETCH_MARKERS = 'FETCH_MARKERS';","import api from \"../api/api\";\r\nimport {\r\n  FETCH_POINTS_START,\r\n  FETCH_POINTS_SUCCESS,\r\n  FETCH_POINTS_FAILURE,\r\n  FETCH_MARKERS,\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  points: [],\r\n  markers: [],\r\n};\r\n\r\nconst map = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_POINTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        points: [...payload],\r\n      };\r\n\r\n    case FETCH_MARKERS:\r\n      return {\r\n        ...state,\r\n        markers: [...payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchPoints = () => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_POINTS_START,\r\n  });\r\n  try {\r\n    const markers = await api.getPointsFromApi();\r\n    dispatch({\r\n      type: FETCH_POINTS_SUCCESS,\r\n      payload: markers,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_POINTS_FAILURE,\r\n      payload: error,\r\n      error: true,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchMarkers = (points) => async (dispatch) => {\r\n  const markers = await Promise.all(\r\n    points.map((point) => {\r\n      return api.getMarkerForMap(point);\r\n    })\r\n  );\r\n  dispatch({\r\n    type: FETCH_MARKERS,\r\n    payload: markers,\r\n  });\r\n};\r\n\r\nexport default map;\r\n","import { createSelector } from \"reselect\";\r\nimport uniqBy from 'lodash.uniqby';\r\n\r\nconst getPointsFromState = (state) => state.map.points;\r\n\r\nexport const getPointsAddress = createSelector(\r\n  [getPointsFromState],\r\n  (points) => {return points}\r\n);\r\n\r\nconst getMarkersFromState = (state) => {\r\n  return state.map.markers;\r\n};\r\n\r\nexport const getMarkersWithMemo = createSelector(\r\n  [getMarkersFromState],\r\n  (markers) => {\r\n    return markers;\r\n  }\r\n);\r\n\r\nexport const getCitiesWithMemo = createSelector(\r\n  [getMarkersFromState],\r\n  (markers) => {\r\n    return uniqBy(markers.map(marker => marker.city), 'id');\r\n  }\r\n);\r\n","import styles from \"./Marker.module.scss\";\r\nimport cn from \"classnames\";\r\n\r\nconst Marker = ({ color, name, setCurrentCity, setCurrentAddress, marker, setZoom, setCenter }) => {\r\n\r\n  const hadleMarker = () => {\r\n    setCurrentCity(marker.city);\r\n    setCurrentAddress(marker);\r\n    setCenter({ lat: marker.lat, lng: marker.lng })\r\n    setZoom(14);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        onClick={hadleMarker}\r\n        className={cn(styles.pin, styles.bounce)}\r\n        style={{ backgroundColor: color, cursor: \"pointer\" }}\r\n        title={name}\r\n      />\r\n      <div className={styles.pulse} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marker;\r\n","import GoogleMapReact from \"google-map-react\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport apiKey from \"../../../api/apiKey\";\r\nimport { fetchMarkers } from \"../../../redux/map\";\r\nimport { getMarkersWithMemo, getPointsAddress } from \"../../../redux/selectors\";\r\nimport Marker from \"./Marker/Marker\";\r\n// import styles from \"./OrderPageMap.module.scss\";\r\n\r\nconst OrderPageMap = ({ center, points, fetchMarkers, markers, zoom, setZoom, setCenter, setCurrentCity, setCurrentAddress }) => {\r\n\r\n  useEffect(() => {\r\n    if (points.length) {\r\n      fetchMarkers(points);\r\n    }\r\n  }, [fetchMarkers, points]);\r\n\r\n  return (\r\n    <div style={{ height: \"400px\", width: \"800px\" }}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: apiKey }}\r\n        center={center}\r\n        zoom={zoom}\r\n        options={{scrollwheel: true}}\r\n      >\r\n        {markers.map((marker, index) => {\r\n          return (\r\n            <Marker\r\n              key={index}\r\n              lat={marker.lat}\r\n              lng={marker.lng}\r\n              name={marker.address}\r\n              color={\"blue\"}\r\n              setCurrentCity={setCurrentCity}\r\n              setCurrentAddress={setCurrentAddress}\r\n              marker={marker}\r\n              setZoom={setZoom}\r\n              setCenter={setCenter}\r\n            />\r\n          );\r\n        })}\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    points: getPointsAddress(state),\r\n    markers: getMarkersWithMemo(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchMarkers })(OrderPageMap);\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport styles from \"./MapForm.module.scss\";\r\n\r\nconst MapForm = ({\r\n  citiesFromState,\r\n  filteredMarkers,\r\n  currentCity,\r\n  currentAddress,\r\n  setCenter,\r\n  setCurrentCity,\r\n  setZoom,\r\n  setCurrentAddress,\r\n}) => {\r\n  const filterOptionsForCity = createFilterOptions({\r\n    matchFrom: \"start\",\r\n    stringify: (option) => option.name,\r\n  });\r\n\r\n  const filterOptionsForAddress = createFilterOptions({\r\n    matchFrom: \"start\",\r\n    stringify: (option) => option.address,\r\n    startAfter: 2,\r\n  });\r\n\r\n  return (\r\n    <div className={styles.mapForm}>\r\n      <Autocomplete\r\n        id=\"city-select\"\r\n        forcePopupIcon={false}\r\n        options={citiesFromState}\r\n        getOptionLabel={(option) => option.name}\r\n        style={{ width: 300 }}\r\n        getOptionSelected={(option, value) => option.id === value.id}\r\n        filterOptions={filterOptionsForCity}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Город\"\r\n            placeholder=\"Начните вводить город...\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        )}\r\n        noOptionsText=\"Ничего не найдено\"\r\n        onChange={(event, value, reason) => {\r\n          if (reason === \"select-option\") {\r\n            setCenter({ lat: value.lat, lng: value.lng });\r\n            setCurrentCity(value);\r\n            setZoom(12);\r\n            setCurrentAddress(null);\r\n          }\r\n          if (reason === \"clear\") {\r\n            setCurrentCity(null);\r\n            setCurrentAddress(null);\r\n            setZoom(12);\r\n          }\r\n        }}\r\n        value={currentCity}\r\n      />\r\n      <Autocomplete\r\n        id=\"point-select\"\r\n        forcePopupIcon={false}\r\n        options={filteredMarkers}\r\n        getOptionLabel={(option) => option.address}\r\n        filterOptions={filterOptionsForAddress}\r\n        style={{ width: 300 }}\r\n        getOptionSelected={(option, value) => option.id === value.id}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Пункт выдачи\"\r\n            placeholder=\"Начните вводить пункт...\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        )}\r\n        noOptionsText=\"Ничего не найдено\"\r\n        onChange={(event, value, reason) => {\r\n          if (reason === \"select-option\") {\r\n            setCenter({ lat: value.lat, lng: value.lng });\r\n            setZoom(14);\r\n            if (currentCity === null) {\r\n              setCurrentCity(value.city);\r\n            }\r\n            setCurrentAddress(value);\r\n          }\r\n          if (reason === \"clear\") {\r\n            setCurrentAddress(null);\r\n            setZoom(12);\r\n          }\r\n        }}\r\n        value={currentAddress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport OpenedMenu from \"../StartPage/OpenedMenu/OpenedMenu\";\r\nimport StartPageMenu from \"../StartPage/StartPageMenu/StartPageMenu\";\r\nimport styles from \"./OrderPage.module.scss\";\r\nimport OrderPageHeader from \"./OrderPageHeader/OrderPageHeader\";\r\nimport OrderPageNav from \"./OrderPageNav/OrderPageNav\";\r\nimport OrderPageMap from \"./OrderPageMap/OrderPageMap\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPoints } from \"../../redux/map\";\r\nimport Geocode from \"react-geocode\";\r\nimport { getCitiesWithMemo, getMarkersWithMemo } from \"../../redux/selectors\";\r\nimport apiKey from \"../../api/apiKey\";\r\nimport MapForm from \"./MapForm/MapForm\";\r\n\r\nconst OrderPage = ({ fetchPoints, citiesFromState, markers }) => {\r\n  useEffect(() => {\r\n    Geocode.setApiKey(apiKey);\r\n    Geocode.setLanguage(\"en\");\r\n    Geocode.setRegion(\"ru\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchPoints();\r\n  }, [fetchPoints]);\r\n\r\n  const [center, setCenter] = useState({ lat: 54.3186575, lng: 48.397776 });\r\n\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\r\n\r\n  const [currentCity, setCurrentCity] = useState(null);\r\n\r\n  const [currentAddress, setCurrentAddress] = useState(null);\r\n\r\n  const [zoom, setZoom] = useState(12);\r\n\r\n  const filteredMarkers = currentCity\r\n    ? markers.filter((marker) => marker.city.name === currentCity.name)\r\n    : markers;\r\n\r\n  return (\r\n    <div className={styles.orderMain}>\r\n      {menuIsOpen && <OpenedMenu />}\r\n      <StartPageMenu menuIsOpen={menuIsOpen} setMenuIsOpen={setMenuIsOpen} />\r\n      <div className={styles.orderMainContainer}>\r\n        <OrderPageHeader />\r\n        <OrderPageNav />\r\n        <div className={styles.orderWrap}>\r\n          <div className={styles.rightContainer}>\r\n            <MapForm\r\n              citiesFromState={citiesFromState}\r\n              filteredMarkers={filteredMarkers}\r\n              currentCity={currentCity}\r\n              currentAddress={currentAddress}\r\n              setCenter={setCenter}\r\n              setCurrentCity={setCurrentCity}\r\n              setZoom={setZoom}\r\n              setCurrentAddress={setCurrentAddress}\r\n            />\r\n            <OrderPageMap\r\n              center={center}\r\n              zoom={zoom}\r\n              setZoom={setZoom}\r\n              setCenter={setCenter}\r\n              setCurrentCity={setCurrentCity}\r\n              setCurrentAddress={setCurrentAddress}\r\n            />\r\n          </div>\r\n          <div className={styles.leftContainer}>\r\n            <div className={styles.yourOrderContainer}>\r\n              <span className={styles.yourOrder}>Ваш заказ:</span>\r\n            </div>\r\n            {currentAddress ? (\r\n              <div className={styles.orderPoint}>\r\n                <span className={styles.pointTitle}>Пункт выдачи</span>\r\n                <span className={styles.dots}></span>\r\n                <div className={styles.point}>\r\n                  <span>{`${currentAddress.city.name},`}</span>\r\n                  <span>{`${currentAddress.address}`}</span>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <button\r\n              className={styles.chooseModelButton}\r\n              disabled={!currentAddress}\r\n            >\r\n              Выбрать модель\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    citiesFromState: getCitiesWithMemo(state),\r\n    markers: getMarkersWithMemo(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPoints })(OrderPage);\r\n","import { Route, Switch } from \"react-router\";\nimport StartPage from './components/StartPage/StartPage';\n\nimport './App.css';\nimport OrderPage from \"./components/OrderPage/OrderPage\";\n\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n      <Route path=\"/aptapta\" component={StartPage}/>\n        <Route exact path=\"/\" component={StartPage} />\n        <Route path=\"/order\" component={OrderPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport map from './map'\r\n\r\n\r\nconst reducers = combineReducers({\r\n    map\r\n  }\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter >\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderMain\":\"OrderPage_orderMain__CGuBs\",\"orderMainContainer\":\"OrderPage_orderMainContainer__1jtR5\",\"rightContainer\":\"OrderPage_rightContainer__kCqdD\",\"orderWrap\":\"OrderPage_orderWrap__1qRgY\",\"leftContainer\":\"OrderPage_leftContainer__1uaFq\",\"yourOrder\":\"OrderPage_yourOrder__VWbq8\",\"yourOrderContainer\":\"OrderPage_yourOrderContainer__39WvU\",\"orderPoint\":\"OrderPage_orderPoint__346mg\",\"pointTitle\":\"OrderPage_pointTitle__3oiaT\",\"dots\":\"OrderPage_dots__2acUF\",\"point\":\"OrderPage_point__2XGue\",\"chooseModelButton\":\"OrderPage_chooseModelButton__1OptD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"StartPageSlider_buttonContainer__2UxnL\",\"paginationContainer\":\"StartPageSlider_paginationContainer__Ya9dS\",\"sliderButton\":\"StartPageSlider_sliderButton__1j8ju\",\"sliderItem\":\"StartPageSlider_sliderItem__2boni\",\"sliderContent\":\"StartPageSlider_sliderContent__3IMhd\",\"wrapImg\":\"StartPageSlider_wrapImg__1s26s\",\"green\":\"StartPageSlider_green__1q-g-\",\"blue\":\"StartPageSlider_blue__3Vmu3\",\"red\":\"StartPageSlider_red__3bC9l\",\"purple\":\"StartPageSlider_purple__1sli1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"openedMenu\":\"OpenedMenu_openedMenu__1wW2N\",\"menuContainer\":\"OpenedMenu_menuContainer__2GSSy\",\"menu\":\"OpenedMenu_menu__3ecB-\",\"social\":\"OpenedMenu_social__1F_R-\",\"icon\":\"OpenedMenu_icon__3RuBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"StartPageMenu_menu__jp_rG\",\"menuButton\":\"StartPageMenu_menuButton__cQbCB\",\"langButton\":\"StartPageMenu_langButton__vcwvG\",\"showMobile\":\"StartPageMenu_showMobile__2IGFO\",\"closeButton\":\"StartPageMenu_closeButton__2sDDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"OrderPageHeader_header__3IZHb\",\"miniName\":\"OrderPageHeader_miniName__2a8yd\",\"cities\":\"OrderPageHeader_cities__vQmqI\",\"city\":\"OrderPageHeader_city__khP6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pin\":\"Marker_pin__jVsy7\",\"bounce\":\"Marker_bounce__2dpsP\",\"pulse\":\"Marker_pulse__1cCIC\",\"pulsate\":\"Marker_pulsate__1uSuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"StartPage_main__2BBQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"OrderPageNav_nav__VH4Qh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapForm\":\"MapForm_mapForm__31QNR\",\"none\":\"MapForm_none__3lptc\"};"],"sourceRoot":""}